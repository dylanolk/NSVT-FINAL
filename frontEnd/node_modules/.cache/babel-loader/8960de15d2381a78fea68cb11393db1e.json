{"ast":null,"code":"var _jsxFileName = \"/Users/kevin/Documents/GitHub/Nyquist_Shannon_MVP/frontEnd/src/components/wavplayer/PlayAudio.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"react-h5-audio-player/lib/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PlayAudio extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"originalAudio\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is the original.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this), this.props.audio && /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: \"data:audio/wav;base64,\" + this.props.audio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"compressedAudio\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"This is the processed audio.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), this.props.audio && /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: \"data:audio/wav;base64,\" + this.props.processed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PlayAudio;","map":{"version":3,"sources":["/Users/kevin/Documents/GitHub/Nyquist_Shannon_MVP/frontEnd/src/components/wavplayer/PlayAudio.js"],"names":["React","useState","useEffect","PlayAudio","Component","constructor","props","render","audio","processed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAO,sCAAP;;;AAEA,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAK,QAAA,KAAK,EAAC,eAAX;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,KAAKD,KAAL,CAAWE,KAAX,iBACC;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,GAAG,EAAE,2BAA2B,KAAKF,KAAL,CAAWE;AAF7C;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,KAAK,EAAC,iBAAX;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEG,KAAKF,KAAL,CAAWE,KAAX,iBACC;AACE,UAAA,QAAQ,MADV;AAEE,UAAA,GAAG,EAAE,2BAA2B,KAAKF,KAAL,CAAWG;AAF7C;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AA5BqC;;AA+BxC,eAAeN,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport \"react-h5-audio-player/lib/styles.css\";\n\nclass PlayAudio extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <div class=\"originalAudio\">\n          <p>This is the original.</p>\n          {this.props.audio && (\n            <audio\n              controls\n              src={\"data:audio/wav;base64,\" + this.props.audio}\n            ></audio>\n          )}\n        </div>\n        <div class=\"compressedAudio\">\n          <p>This is the processed audio.</p>\n          {this.props.audio && (\n            <audio\n              controls\n              src={\"data:audio/wav;base64,\" + this.props.processed}\n            ></audio>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlayAudio;\n"]},"metadata":{},"sourceType":"module"}